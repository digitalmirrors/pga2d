;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name pga2d.canvas, :imports nil, :requires {gr pga2d.grassmann, pga2d.grassmann pga2d.grassmann, cf pga2d.clifford, pga2d.clifford pga2d.clifford, events goog.events, goog.events goog.events}, :uses nil, :defs {line-rectangle-intersection {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 33, :column 7, :end-line 33, :end-column 34, :arglists (quote ([line [[xMin yMin] [xMax yMax]]]))}, :name pga2d.canvas/line-rectangle-intersection, :variadic false, :file "src/pga2d/canvas.cljs", :end-column 34, :method-params ([line p__25490]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([line [[xMin yMin] [xMax yMax]]]))}, indices {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 28, :column 7, :end-line 28, :end-column 14, :arglists (quote ([pred coll]))}, :name pga2d.canvas/indices, :variadic false, :file "src/pga2d/canvas.cljs", :end-column 14, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, dot {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 22, :column 7, :end-line 22, :end-column 10, :arglists (quote ([a b]))}, :name pga2d.canvas/dot, :variadic false, :file "src/pga2d/canvas.cljs", :end-column 10, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, normalized {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([[x y z]]))}, :name pga2d.canvas/normalized, :variadic false, :file "src/pga2d/canvas.cljs", :end-column 17, :method-params ([p__25481]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y z]]))}, by-id {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([id]))}, :name pga2d.canvas/by-id, :variadic false, :file "src/pga2d/canvas.cljs", :end-column 12, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, canvas-render {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 179, :column 7, :end-line 179, :end-column 20, :arglists (quote ([cv g]))}, :name pga2d.canvas/canvas-render, :variadic false, :file "src/pga2d/canvas.cljs", :end-column 20, :method-params ([cv g]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cv g]))}, linear-interpolator {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 15, :column 7, :end-line 15, :end-column 26, :arglists (quote ([a b A B]))}, :name pga2d.canvas/linear-interpolator, :variadic false, :file "src/pga2d/canvas.cljs", :end-column 26, :method-params ([a b A B]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a b A B]))}, current-window-size {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 11, :column 7, :end-line 11, :end-column 26, :arglists (quote ([]))}, :name pga2d.canvas/current-window-size, :variadic false, :file "src/pga2d/canvas.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ega {:name pga2d.canvas/ega, :file "src/pga2d/canvas.cljs", :line 31, :column 1, :end-line 31, :end-column 9, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 31, :column 6, :end-line 31, :end-column 9}}, canvas {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 70, :column 7, :end-line 70, :end-column 13, :arglists (quote ([ll ur] [ll ur options])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([ll ur] [ll ur options]), :arglists ([ll ur] [ll ur options]), :arglists-meta (nil nil)}}, :name pga2d.canvas/canvas, :variadic false, :file "src/pga2d/canvas.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([ll ur] [ll ur options]), :arglists ([ll ur] [ll ur options]), :arglists-meta (nil nil)}, :method-params ([ll ur] [ll ur options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 3, :fn-var true, :arglists ([ll ur] [ll ur options])}, render {:name pga2d.canvas/render, :file "src/pga2d/canvas.cljs", :line 164, :column 1, :end-line 164, :end-column 17, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 164, :column 11, :end-line 164, :end-column 17}}, rotate {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/canvas.cljs", :line 24, :column 7, :end-line 24, :end-column 13, :arglists (quote ([n s]))}, :name pga2d.canvas/rotate, :variadic false, :file "src/pga2d/canvas.cljs", :end-column 13, :method-params ([n s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n s]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:draw-point :normalized :mouse-handler :down :color :set-color :xy :default :set-line-width :move :type :preserve-aspect :k :draw-segment :draw-line :d :drag :base :hierarchy :clear}, :order [:normalized :preserve-aspect :mouse-handler :down :xy :base :type :d :drag :move :clear :set-color :draw-point :set-line-width :draw-line :draw-segment :hierarchy :k :default :color]}, :doc nil}