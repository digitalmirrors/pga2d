;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name pga2d.clifford, :imports nil, :requires {gr pga2d.grassmann, pga2d.grassmann pga2d.grassmann}, :uses nil, :defs {sandwich {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 147, :column 7, :end-line 147, :end-column 15, :arglists (quote ([sig bread]))}, :name pga2d.clifford/sandwich, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 15, :method-params ([sig bread]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sig bread]))}, reflection {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 151, :column 7, :end-line 151, :end-column 17, :arglists (quote ([sig mirror]))}, :name pga2d.clifford/reflection, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 17, :method-params ([sig mirror]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sig mirror]))}, ordinary-norm-squared {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 50, :column 7, :end-line 50, :end-column 28, :arglists (quote ([sig mv]))}, :name pga2d.clifford/ordinary-norm-squared, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 28, :method-params ([sig mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sig mv]))}, normalized {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 99, :column 7, :end-line 99, :end-column 17, :arglists (quote ([sig mv]))}, :name pga2d.clifford/normalized, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 17, :method-params ([sig mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sig mv]))}, polarized {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 40, :column 7, :end-line 40, :end-column 16, :arglists (quote ([sig mv]))}, :name pga2d.clifford/polarized, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 16, :method-params ([sig mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sig mv]))}, gp {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 18, :column 7, :end-line 18, :end-column 9, :arglists (quote ([sig {[a] :0, [a0 a1 a2] :1, [A0 A1 A2] :2, [A] :3} {[b] :0, [b0 b1 b2] :1, [B0 B1 B2] :2, [B] :3}]))}, :name pga2d.clifford/gp, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 9, :method-params ([sig p__5876 p__5877]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 3, :fn-var true, :arglists (quote ([sig {[a] :0, [a0 a1 a2] :1, [A0 A1 A2] :2, [A] :3} {[b] :0, [b0 b1 b2] :1, [B0 B1 B2] :2, [B] :3}]))}, ga {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 182, :column 7, :end-line 182, :end-column 9, :arglists (quote ([sig]))}, :name pga2d.clifford/ga, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 9, :method-params ([sig]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sig]))}, sp {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 9, :column 7, :end-line 9, :end-column 9, :arglists (quote ([as]))}, :name pga2d.clifford/sp, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 9, :method-params ([as]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([as]))}, inverse {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 134, :column 7, :end-line 134, :end-column 14, :arglists (quote ([sig mv]))}, :name pga2d.clifford/inverse, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 14, :method-params ([sig mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sig mv]))}, translator? {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 72, :column 7, :end-line 72, :end-column 18, :arglists (quote ([sig rotor]))}, :name pga2d.clifford/translator?, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 18, :method-params ([sig rotor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sig rotor]))}, norm {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 95, :column 7, :end-line 95, :end-column 11, :arglists (quote ([sig mv]))}, :name pga2d.clifford/norm, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 11, :method-params ([sig mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sig mv]))}, measure-of-rotor {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 115, :column 7, :end-line 115, :end-column 23, :arglists (quote ([sig rotor]))}, :name pga2d.clifford/measure-of-rotor, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 23, :method-params ([sig rotor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sig rotor]))}, exp {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 155, :column 7, :end-line 155, :end-column 10, :arglists (quote ([sig t rotor]))}, :name pga2d.clifford/exp, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 10, :method-params ([sig t rotor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 3, :fn-var true, :arglists (quote ([sig t rotor]))}, ideal? {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 55, :column 7, :end-line 55, :end-column 13, :arglists (quote ([sig mv] [sig mv nv])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sig mv] [sig mv nv]), :arglists ([sig mv] [sig mv nv]), :arglists-meta (nil nil)}}, :name pga2d.clifford/ideal?, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sig mv] [sig mv nv]), :arglists ([sig mv] [sig mv nv]), :arglists-meta (nil nil)}, :method-params ([sig mv] [sig mv nv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 3, :fn-var true, :arglists ([sig mv] [sig mv nv])}, e0 {:name pga2d.clifford/e0, :file "src/pga2d/clifford.cljs", :line 112, :column 1, :end-line 112, :end-column 8, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 112, :column 6, :end-line 112, :end-column 8}}, ideal-inner-product {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 46, :column 7, :end-line 46, :end-column 26, :arglists (quote ([v0 v1]))}, :name pga2d.clifford/ideal-inner-product, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 26, :method-params ([v0 v1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v0 v1]))}, norm-squared {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 82, :column 7, :end-line 82, :end-column 19, :arglists (quote ([sig mv]))}, :name pga2d.clifford/norm-squared, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 19, :method-params ([sig mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sig mv]))}, sd {:protocol-inline nil, :meta {:file "/Users/gunn/Software/CLJS/pga2d/src/pga2d/clifford.cljs", :line 14, :column 7, :end-line 14, :end-column 9, :arglists (quote ([as bs] [as])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([as bs] [as]), :arglists ([as bs] [as]), :arglists-meta (nil nil)}}, :name pga2d.clifford/sd, :variadic false, :file "src/pga2d/clifford.cljs", :end-column 9, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([as bs] [as]), :arglists ([as bs] [as]), :arglists-meta (nil nil)}, :method-params ([as bs] [as]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists ([as bs] [as])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:polarized :normalized :gp :rotor? :translator? :inverse :norm :measure-of-rotor :exp :0 :ideal? :k :1 :norm-squared :2 :sandwich :3 :kvector? :ordinary-norm-squared}, :order [:0 :1 :2 :3 :kvector? :rotor? :k :polarized :normalized :gp :translator? :inverse :norm :measure-of-rotor :exp :ideal? :norm-squared :sandwich :ordinary-norm-squared]}, :doc nil}