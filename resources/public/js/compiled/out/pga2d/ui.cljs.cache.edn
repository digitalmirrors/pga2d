;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name pga2d.ui, :imports nil, :requires nil, :uses nil, :defs {kwdstr {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/ui.cljs", :line 4, :column 7, :end-line 4, :end-column 13, :arglists (quote ([kwd]))}, :name pga2d.ui/kwdstr, :variadic false, :file "src/pga2d/ui.cljs", :end-column 13, :method-params ([kwd]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([kwd]))}, TextInput {:name pga2d.ui/TextInput, :file "src/pga2d/ui.cljs", :line 6, :column 1, :end-line 6, :end-column 15, :meta {:file "/home/mbp/pga2d/src/pga2d/ui.cljs", :line 6, :column 6, :end-line 6, :end-column 15}}, SliderInput {:name pga2d.ui/SliderInput, :file "src/pga2d/ui.cljs", :line 27, :column 1, :end-line 27, :end-column 17, :meta {:file "/home/mbp/pga2d/src/pga2d/ui.cljs", :line 27, :column 6, :end-line 27, :end-column 17}}, input-value-map {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/ui.cljs", :line 58, :column 7, :end-line 58, :end-column 22, :arglists (quote ([inputs]))}, :name pga2d.ui/input-value-map, :variadic false, :file "src/pga2d/ui.cljs", :end-column 22, :method-params ([inputs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([inputs]))}, input-widget {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/ui.cljs", :line 63, :column 7, :end-line 63, :end-column 19, :arglists (quote ([k v draw appstate]))}, :name pga2d.ui/input-widget, :variadic false, :file "src/pga2d/ui.cljs", :end-column 19, :method-params ([k v draw appstate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 4, :fn-var true, :arglists (quote ([k v draw appstate]))}, UI {:name pga2d.ui/UI, :file "src/pga2d/ui.cljs", :line 95, :column 1, :end-line 95, :end-column 8, :meta {:file "/home/mbp/pga2d/src/pga2d/ui.cljs", :line 95, :column 6, :end-line 95, :end-column 8}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:min :number :value :width :type :inputs :max :step :slider}, :order [:inputs :value :type :number :slider :min :max :step :width]}, :doc nil}