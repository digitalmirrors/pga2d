;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name pga2d.diagram, :imports nil, :requires {ui pga2d.ui, pga2d.ui pga2d.ui, gr pga2d.grassmann, pga2d.grassmann pga2d.grassmann, cf pga2d.clifford, pga2d.clifford pga2d.clifford, c pga2d.canvas, pga2d.canvas pga2d.canvas}, :uses nil, :defs {mndist {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/diagram.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([mv0 mv1]))}, :name pga2d.diagram/mndist, :variadic false, :file "src/pga2d/diagram.cljs", :end-column 13, :method-params ([mv0 mv1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mv0 mv1]))}, selected {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/diagram.cljs", :line 15, :column 7, :end-line 15, :end-column 15, :arglists (quote ([mv kw selection]))}, :name pga2d.diagram/selected, :variadic false, :file "src/pga2d/diagram.cljs", :end-column 15, :method-params ([mv kw selection]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([mv kw selection]))}, kwdstr {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/diagram.cljs", :line 17, :column 7, :end-line 17, :end-column 13, :arglists (quote ([kwd]))}, :name pga2d.diagram/kwdstr, :variadic false, :file "src/pga2d/diagram.cljs", :end-column 13, :method-params ([kwd]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([kwd]))}, diagram {:protocol-inline nil, :meta {:file "/home/mbp/pga2d/src/pga2d/diagram.cljs", :line 19, :column 7, :end-line 19, :end-column 14, :arglists (quote ([options]))}, :name pga2d.diagram/diagram, :variadic false, :file "src/pga2d/diagram.cljs", :end-column 14, :method-params ([options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([options]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:install-mouse-handler :normalized :down :mv :selected :color :source-link :coords :xy :move :type :source :up :g :input-style :inputs :opacity :drag :draw :selection :backgroundColor :dragables}, :order [:selected :g :dragables :inputs :source-link :input-style :draw :coords :color :backgroundColor :opacity :normalized :mv :selection :source :install-mouse-handler :type :down :up :move :xy :drag]}, :doc nil}